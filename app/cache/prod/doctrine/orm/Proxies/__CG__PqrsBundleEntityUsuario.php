<?php

namespace Proxies\__CG__\PqrsBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Usuario extends \PqrsBundle\Entity\Usuario implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', '' . "\0" . 'PqrsBundle\\Entity\\Usuario' . "\0" . 'username', 'nombre', 'correo', 'documento', 'password', '' . "\0" . 'PqrsBundle\\Entity\\Usuario' . "\0" . 'area', '' . "\0" . 'PqrsBundle\\Entity\\Usuario' . "\0" . 'roles', '' . "\0" . 'PqrsBundle\\Entity\\Usuario' . "\0" . 'multiplex', 'portales', 'salt', 'firma');
        }

        return array('__isInitialized__', 'id', '' . "\0" . 'PqrsBundle\\Entity\\Usuario' . "\0" . 'username', 'nombre', 'correo', 'documento', 'password', '' . "\0" . 'PqrsBundle\\Entity\\Usuario' . "\0" . 'area', '' . "\0" . 'PqrsBundle\\Entity\\Usuario' . "\0" . 'roles', '' . "\0" . 'PqrsBundle\\Entity\\Usuario' . "\0" . 'multiplex', 'portales', 'salt', 'firma');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Usuario $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setUsername($username)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsername', array($username));

        return parent::setUsername($username);
    }

    /**
     * {@inheritDoc}
     */
    public function getUsername()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsername', array());

        return parent::getUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function setNombre($nombre)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNombre', array($nombre));

        return parent::setNombre($nombre);
    }

    /**
     * {@inheritDoc}
     */
    public function getNombre()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNombre', array());

        return parent::getNombre();
    }

    /**
     * {@inheritDoc}
     */
    public function setCorreo($correo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCorreo', array($correo));

        return parent::setCorreo($correo);
    }

    /**
     * {@inheritDoc}
     */
    public function getCorreo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCorreo', array());

        return parent::getCorreo();
    }

    /**
     * {@inheritDoc}
     */
    public function setDocumento($documento)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDocumento', array($documento));

        return parent::setDocumento($documento);
    }

    /**
     * {@inheritDoc}
     */
    public function getDocumento()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDocumento', array());

        return parent::getDocumento();
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword($password)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', array($password));

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', array());

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setSalt($salt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSalt', array($salt));

        return parent::setSalt($salt);
    }

    /**
     * {@inheritDoc}
     */
    public function getSalt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSalt', array());

        return parent::getSalt();
    }

    /**
     * {@inheritDoc}
     */
    public function setFirma($firma)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFirma', array($firma));

        return parent::setFirma($firma);
    }

    /**
     * {@inheritDoc}
     */
    public function getFirma()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFirma', array());

        return parent::getFirma();
    }

    /**
     * {@inheritDoc}
     */
    public function addArea(\PqrsBundle\Entity\Area $area)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addArea', array($area));

        return parent::addArea($area);
    }

    /**
     * {@inheritDoc}
     */
    public function removeArea(\PqrsBundle\Entity\Area $area)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeArea', array($area));

        return parent::removeArea($area);
    }

    /**
     * {@inheritDoc}
     */
    public function getArea()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArea', array());

        return parent::getArea();
    }

    /**
     * {@inheritDoc}
     */
    public function addRole(\PqrsBundle\Entity\Roles $roles)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRole', array($roles));

        return parent::addRole($roles);
    }

    /**
     * {@inheritDoc}
     */
    public function removeRole(\PqrsBundle\Entity\Roles $roles)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeRole', array($roles));

        return parent::removeRole($roles);
    }

    /**
     * {@inheritDoc}
     */
    public function getRoles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoles', array());

        return parent::getRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function addMultiplex(\PqrsBundle\Entity\Multiplex $multiplex)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addMultiplex', array($multiplex));

        return parent::addMultiplex($multiplex);
    }

    /**
     * {@inheritDoc}
     */
    public function removeMultiplex(\PqrsBundle\Entity\Multiplex $multiplex)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeMultiplex', array($multiplex));

        return parent::removeMultiplex($multiplex);
    }

    /**
     * {@inheritDoc}
     */
    public function getMultiplex()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMultiplex', array());

        return parent::getMultiplex();
    }

    /**
     * {@inheritDoc}
     */
    public function addPortale(\PqrsBundle\Entity\Portal $portales)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPortale', array($portales));

        return parent::addPortale($portales);
    }

    /**
     * {@inheritDoc}
     */
    public function removePortale(\PqrsBundle\Entity\Portal $portales)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePortale', array($portales));

        return parent::removePortale($portales);
    }

    /**
     * {@inheritDoc}
     */
    public function getPortales()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPortales', array());

        return parent::getPortales();
    }

}
